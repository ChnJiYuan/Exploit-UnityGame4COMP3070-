using UnityEngine;

public class TouZi : MonoBehaviour
{
    public delegate void PointTypeDelegate(int pointValue);
    public PointTypeDelegate PointTypeCallback;  // 外界注册的回调函数

    public Rigidbody rb;  // 骰子的刚体组件

    private void Start()
    {
        rb = GetComponent<Rigidbody>();
        rb.useGravity = false;  // 关闭重力，防止骰子乱跳
    }

    public void Throw()
    {
        // 给骰子添加一个爆炸力，使其炸起来并给一个随机扭矩
        float explosionForce = Random.Range(5f, 10f);
        float torqueForce = Random.Range(5f, 10f);

        rb.useGravity = true;  // 开启重力，让骰子落下
        rb.AddExplosionForce(explosionForce, transform.position, 1f);
        rb.AddTorque(new Vector3(Random.Range(-torqueForce, torqueForce), Random.Range(-torqueForce, torqueForce), Random.Range(-torqueForce, torqueForce)));

        StartCoroutine(WaitForStop());  // 开启协程等待骰子停下来
    }

    private System.Collections.IEnumerator WaitForStop()
    {
        yield return new WaitForSeconds(2f);  // 假设等待2秒，可以根据需要进行调整

        if (PointTypeCallback != null)
        {
            int pointValue = GetCurrentType();  // 获取朝上一面的点数值
            PointTypeCallback(pointValue);  // 执行回调，传递点数值
        }
    }

    private int GetCurrentType()
    {
        int maxPointValue = 0;
        Transform currentPoint = null;

        // 遍历子物体，找到朝上一面的点数值
        foreach (Transform child in transform)
        {
            int pointValue = child.GetComponent<TouZi_Point>().pointValue;
            if (pointValue > maxPointValue)
            {
                maxPointValue = pointValue;
                currentPoint = child;
            }
        }

        return currentPoint != null ? currentPoint.GetComponent<TouZi_Point>().pointValue : 0;
    }
}